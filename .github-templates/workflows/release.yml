name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., v1.0.0)"
        required: true
        type: string
      release_notes:
        description: "Release notes (optional)"
        required: false
        type: string
        default: ""
      prerelease:
        description: "Mark as prerelease"
        required: false
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dfx
        uses: dfinity/setup-dfx@main

      - name: Build canister
        run: |
          bash .github/scripts/build.sh

      - name: Generate checksums
        run: |
          sha256sum wasm/YOUR_CANISTER.wasm.gz > wasm/YOUR_CANISTER.wasm.gz.sha256
          sha256sum src/YOUR_CANISTER/YOUR_CANISTER.did > YOUR_CANISTER.did.sha256
          sha256sum canister_ids.json > canister_ids.json.sha256

      - name: Create Git Tag (Manual Trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          release_name: Release ${{ github.event.inputs.version || github.ref_name }}
          body: ${{ github.event.inputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wasm/YOUR_CANISTER.wasm.gz
          asset_name: YOUR_CANISTER.wasm.gz
          asset_content_type: application/gzip

      - name: Upload Candid Interface
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/YOUR_CANISTER/YOUR_CANISTER.did
          asset_name: YOUR_CANISTER.did
          asset_content_type: text/plain

      - name: Upload Canister IDs
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./canister_ids.json
          asset_name: canister_ids.json
          asset_content_type: application/json

      - name: Upload Checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wasm/YOUR_CANISTER.wasm.gz.sha256
          asset_name: YOUR_CANISTER.wasm.gz.sha256
          asset_content_type: text/plain

      - name: Upload DID Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./YOUR_CANISTER.did.sha256
          asset_name: YOUR_CANISTER.did.sha256
          asset_content_type: text/plain

      - name: Upload Canister IDs Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./canister_ids.json.sha256
          asset_name: canister_ids.json.sha256
          asset_content_type: text/plain

      - name: Cache Cargo dependencies after release build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
