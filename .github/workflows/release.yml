name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g., 1.0.0)"
        required: true
        type: string
      release_notes:
        description: "Release notes (optional)"
        required: false
        type: string
        default: ""

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Git Tag (Manual Trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}

      - name: Create Release
        id: create_release
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # For manual triggers, create a release from the tag we just created
            gh release create v${{ github.event.inputs.version }} \
              --title "Release System v${{ github.event.inputs.version }}" \
              --notes "## Release System v${{ github.event.inputs.version }}

          ${{ github.event.inputs.release_notes }}

          ### Installation

          **Latest version:**
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/toolkit-development/release-system/master/install.sh | bash
          \`\`\`

          **Specific version:**
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/toolkit-development/release-system/master/install.sh | bash -s -- --version ${{ github.event.inputs.version }}
          \`\`\`

          ### What's New

          See the [changelog](https://github.com/toolkit-development/release-system/blob/master/CHANGELOG.md) for detailed changes." \
              --draft=false \
              --prerelease=false
          else
            # For tag pushes, create a release from the existing tag
            gh release create ${{ github.ref_name }} \
              --title "Release System ${{ github.ref_name }}" \
              --notes "## Release System ${{ github.ref_name }}

          ### Installation

          **Latest version:**
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/toolkit-development/release-system/master/install.sh | bash
          \`\`\`

          **Specific version:**
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/toolkit-development/release-system/master/install.sh | bash -s -- --version ${{ github.ref_name }}
          \`\`\`

          ### What's New

          See the [changelog](https://github.com/toolkit-development/release-system/blob/master/CHANGELOG.md) for detailed changes." \
              --draft=false \
              --prerelease=false
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Core Scripts
        run: |
          gh release upload v${{ github.event.inputs.version || github.ref_name }} ./install.sh --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Setup Script
        run: |
          gh release upload v${{ github.event.inputs.version || github.ref_name }} ./setup.sh --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Version File
        run: |
          gh release upload v${{ github.event.inputs.version || github.ref_name }} ./VERSION --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Changelog
        run: |
          gh release upload v${{ github.event.inputs.version || github.ref_name }} ./CHANGELOG.md --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
